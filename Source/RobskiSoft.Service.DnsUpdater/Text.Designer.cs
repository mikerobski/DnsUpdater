//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RobskiSoft.Service.DnsUpdater {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Text {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Text() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RobskiSoft.Service.DnsUpdater.Text", typeof(Text).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking the DNS for host &apos;{0}&apos;..
        /// </summary>
        internal static string Debug_CheckingHost {
            get {
                return ResourceManager.GetString("Debug_CheckingHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The external IP address of the machine is &apos;{0}&apos;..
        /// </summary>
        internal static string Debug_ExternalIPResolved {
            get {
                return ResourceManager.GetString("Debug_ExternalIPResolved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update process completed..
        /// </summary>
        internal static string Debug_ProcessCompleted {
            get {
                return ResourceManager.GetString("Debug_ProcessCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resolved IP address of &apos;{0}&apos; to &apos;{1}&apos;..
        /// </summary>
        internal static string Debug_ResolvedHostname {
            get {
                return ResourceManager.GetString("Debug_ResolvedHostname", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No change detected - skipping host &apos;{0}&apos;..
        /// </summary>
        internal static string Debug_SkippingHost {
            get {
                return ResourceManager.GetString("Debug_SkippingHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starting the update process..
        /// </summary>
        internal static string Debug_StartingProcess {
            get {
                return ResourceManager.GetString("Debug_StartingProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP address change detected - trying to update host &apos;{0}&apos; to IP address &apos;{1}&apos;..
        /// </summary>
        internal static string Debug_UpdatingHost {
            get {
                return ResourceManager.GetString("Debug_UpdatingHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot resolve hostname &apos;{0}&apos; IP address..
        /// </summary>
        internal static string Error_CantResolveHostnameIP {
            get {
                return ResourceManager.GetString("Error_CantResolveHostnameIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No network connection available..
        /// </summary>
        internal static string Error_NoNetwork {
            get {
                return ResourceManager.GetString("Error_NoNetwork", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception was thrown with the message: {0}.
        /// </summary>
        internal static string Exception_Generic {
            get {
                return ResourceManager.GetString("Exception_Generic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updated IP address of &apos;{0}&apos; to &apos;{1}&apos;. The result was: &apos;{2}&apos;.
        /// </summary>
        internal static string Info_UpdatedHost {
            get {
                return ResourceManager.GetString("Info_UpdatedHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The IP address of {0} could not be changed to {1}. The result was &apos;{2}&apos;..
        /// </summary>
        internal static string NotificationBody_Failure {
            get {
                return ResourceManager.GetString("NotificationBody_Failure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The IP address of {0} changed to {1}. The result was &apos;{2}&apos;. Update manually the static DNS zones..
        /// </summary>
        internal static string NotificationBody_Success {
            get {
                return ResourceManager.GetString("NotificationBody_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP Address Changed for {0} Failed!.
        /// </summary>
        internal static string NotificationSubject_Failure {
            get {
                return ResourceManager.GetString("NotificationSubject_Failure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IP Address Changed for {0}.
        /// </summary>
        internal static string NotificationSubject_Success {
            get {
                return ResourceManager.GetString("NotificationSubject_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command-line parameters needed.\nUSAGE:\nDnsUpdater &lt;username&gt; &lt;password&gt; &lt;host1&gt; [&lt;host2&gt;...].
        /// </summary>
        internal static string Warning_InputParameterMissing {
            get {
                return ResourceManager.GetString("Warning_InputParameterMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating the IP address of &apos;{0}&apos; to &apos;{1}&apos; failed. The result was: &apos;{2}&apos;.
        /// </summary>
        internal static string Warning_UpdateHostFailed {
            get {
                return ResourceManager.GetString("Warning_UpdateHostFailed", resourceCulture);
            }
        }
    }
}
